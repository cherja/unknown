(function(window, document){document.addEventListener("DOMContentLoaded", function() {"use strict";function initForm(t,e){document.querySelectorAll("."+t).forEach(function(t){t.addEventListener("submit",function(i){if(i.preventDefault(),t.querySelector(".tell").value.length<10)return alert("Убедитесь в правильности введенного номера телефона!");$.ajax({type:"POST",url:"../php/"+e+".php",data:$(t).serialize(),success:function(){alert("Спасибо за обращение, ожидайте звонка оператора!"),successForm(t)},error:function(){alert("Непредвиденная ошибка сервера, обратитесь позже...")}})},!1)})}function successForm(t){t.querySelectorAll('input:not([type="submit"])').forEach(function(t){return t.value=""});var e=t.parentNode;e.classList.contains("remodal")&&$(e).remodal().close()}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},buttonsClassList=document.getElementById("toptbuttons").classList,headerHeight=document.getElementsByTagName("header")[0].offsetHeight,fixedClass="fixed";window.onscroll=function(){window.pageYOffset>=headerHeight?buttonsClassList.add(fixedClass):buttonsClassList.contains(fixedClass)&&buttonsClassList.remove(fixedClass)},Vue.component("typeahead",{template:'<div :class="typeaheadState">\n                    <div class="typeahead__toggle" ref="toggle" @mousedown.prevent="toggle">\n                        <input type="text" class="typeahead__search"\n                            ref="search"\n                            v-model.trim="search"\n                            @focus="onFocus"\n                            @blur="onBlur"\n                            @keydown.esc="onEscape"\n                            @keydown.down="onDownKey"\n                            @keydown.up="onUpKey"\n                            @keydown.enter="onEnterKey"\n                        >\n                        <span class="typeahead__text" ref="text">{{displayText}}</span>\n                    </div>\n                    <ul @mousedown.prevent.stop class="typeahead__list" ref="list" v-if="open" @scroll="onScroll">\n                        <li class="typeahead__item" v-for="(option, index) in filteredOptions" :key="index">\n                            <a class="typeahead__link"\n                                @mousedown.prevent="select(index)"\n                                :class="[selectIndex === index ? \'typeahead__active\' : \'\']">\n                                {{option}}\n                            </a>\n                        </li>\n                        <li class="no_search" v-if="filteredOptions.length === 0">Город не найден...</li>\n                    </ul>\n                </div>',props:{options:{type:Array,default:function(){return[]}},value:{type:[String,Number],default:null},directionText:{type:String,default:null}},data:function(){return{open:!1,selectIndex:0,displayText:this.directionText,search:"",count:15}},computed:{typeaheadState:function(){return this.open?"typeahead typeahead__open":"typeahead"},filteredOptions:function(){var t=this,e=this.options.filter(function(e){var i=e.split("").slice(0,t.search.length).join("");if(t.search.toLowerCase()==i.toLowerCase())return e});return e.length>=this.count&&(e.length=this.count),this.search.length>0?e.sort(function(t,e){var i=t.city.toUpperCase(),n=e.city.toUpperCase(),s=0;return i>n?s=1:i<n&&(s=-1),s}):e}},methods:{onDownKey:function(){this.filteredOptions.length-1>this.selectIndex&&(this.selectIndex++,this.selectIndex>2&&(this.$refs.list.scrollTop+=20+this.selectIndex))},onUpKey:function(){this.selectIndex>0&&(this.selectIndex--,this.selectIndex>0&&(this.$refs.list.scrollTop-=20+this.selectIndex))},onEnterKey:function(){this.select(this.selectIndex)},select:function(t){this.displayText=this.options[t],this.search="",this.$emit("input",t),this.$refs.search.blur()},toggle:function(t){t.target!==this.$refs.toggle&&t.target!==this.$refs.search&&t.target!==this.$refs.text||(this.open?t.target!==this.$refs.search&&t.target!==this.$refs.text&&this.$refs.search.blur():this.$refs.search.focus())},onFocus:function(){this.open=!0},onBlur:function(){this.selectIndex=0,this.$refs.list.scrollTop=0,this.open=!1},onEscape:function(){this.$refs.search.blur()},onScroll:function(){this.count+=1}}});var vm=new Vue({el:"#calc",data:{citys:["Амвросиевка","Амвросиевский район","Донецк","Донецкий горсовет","Дебальцево","Дебальцевский горсовет","Докучаевск","Докучаевский горсовет","Горловка","Горловский горсовет","Енакиево","Енакиевский горсовет","Ждановка","Ждановский горсовет","Кировское","Кировский горсовет","Макеевка","Макеевский горсовет","Новоазовск","Новоазовский район","Снежное","Снежнянский горсовет","Старобешево","Старобешевский район","Тельманово","Тельмановский район","Торез","Торезский горсовет","Харцызск","Харцызский горсовет","Шахтерск","Шахтерский горсовет","Ясиноватая","Ясиноватский горсовет"],tableTZ:[[1,3,3,3,3,3,3,3,3,4,3,3,4,3,2,3,3],[3,1,3,3,3,3,3,3,1,4,3,3,4,3,2,3,2],[3,3,1,3,3,3,3,3,3,4,3,3,4,3,3,3,3],[3,3,3,1,3,3,3,3,3,4,3,2,3,3,3,3,3],[3,3,3,3,1,2,3,3,3,4,3,3,4,3,3,3,3],[3,3,3,3,2,1,2,2,3,4,3,3,4,3,3,3,3],[3,3,3,3,3,2,1,2,3,4,3,3,4,3,3,3,3],[3,3,3,3,3,2,2,1,3,4,3,3,4,3,3,3,3],[3,1,3,3,3,3,3,3,1,4,3,3,4,3,3,3,3],[4,4,4,4,4,4,4,4,4,1,4,4,3,4,4,4,4],[3,3,3,3,3,3,3,3,3,4,1,3,4,2,3,3,3],[3,3,3,2,3,3,3,3,3,4,3,1,3,3,3,3,3],[4,4,4,3,4,4,4,4,4,3,4,3,1,4,4,4,4],[3,3,3,3,3,3,3,3,3,4,3,3,4,1,3,2,3],[3,2,3,3,3,3,3,3,2,4,3,3,4,3,1,2,3],[3,3,3,3,3,3,3,3,3,4,3,3,4,2,2,1,3],[3,2,3,3,3,3,3,3,2,4,3,3,4,3,3,3,1]],tariff:[{min:0,max:2,prices:[0,65,80,120,200]},{min:2,max:5,prices:[0,75,100,150,240]},{min:5,max:10,prices:[0,95,120,180,300]},{min:10,max:20,prices:[0,130,150,220,350]},{min:20,max:35,prices:[0,165,180,270,410]},{min:35,max:50,prices:[0,210,230,350,470]},{min:50,max:1/0,prices:[[0,0],[210,.8],[230,1.5],[350,2.5],[470,3]]}],docsTarif:[0,60,70,80,90],direction:{from:void 0,to:void 0},typeOfLoad:"load",load:{weight:0,o:0,price:0},loadFields:[],cashPay:{active:!1,sum:!1},overlay:!1},computed:{bigDisplay:function(){return document.documentElement.clientWidth>=660},TZ:function(){var t=void 0,e=this.direction,i=e.from,n=e.to;return void 0!==i&&void 0!==n&&(i=Math.floor(i/2),n=Math.floor(n/2),t=this.tableTZ[n][i]),t},isRegion:function(){var t=this.direction,e=t.from,i=t.to;return!!(e%2||i%2)},period:function(){return this.isRegion?this.TZ+1:this.TZ},result:function(){return this.isRegion?Math.round(1.15*this.total):this.total},total:function(){var t=this;if(this.TZ>0){if("docs"===this.typeOfLoad)return this.docsTarif[this.TZ];var e=this.tariff[0],i=!0,n=function(){var e=250*t.load.o,i=t.load.weight,n=e>=i?e:i;return t.round(n)}();return n>0?(e=this.tariff.find(function(t,e,s){return e+1===s.length&&(i=!1),n>t.min&&n<=t.max}),[function(){var s=e.prices[t.TZ],o=i?s:s[0]+(n-50)*s[1];return t.round(o)}(),function(){if(t.load.price>0){var e=.0025*t.load.price;return t.round(e>5?e:5)}return 0}(),function(){var e=t.cashPay.sum,i=t.round(.01*e);return t.cashPay.active?10+i:0}()].reduce(function(t,e){return t+e},0)):0}}},methods:{round:function(t){return Math.round(100*t/100)},addPlace:function(){this.loadFields.push({weight:10,o:.05,d:0,s:0,v:0,price:500,isCalcO:!1}),this.addAll()},delPlace:function(t){this.loadFields.splice(t,1),this.addAll()},add:function(t){this.load[t]=0;for(var e=0;e<this.loadFields.length;e++)this.load[t]+=parseFloat(this.loadFields[e][t]);"object"===_typeof(window.event)&&this.validate(window.event)},addAll:function(){this.add("weight"),this.add("o"),this.add("price")},calcO:function(t){if("close"!==t){var e=this.loadFields[t];e.d&&e.s&&e.v&&(e.o=(e.d*e.s*e.v/1e6).toFixed(3)),this.addAll();var i=this.$refs.volume[0];i.classList?i.classList.remove("novalid"):i.className=i.className.replace(new RegExp("(^|\\b)"+"novalid".split(" ").join("|")+"(\\b|$)","gi")," ")}for(var n=0;n<this.loadFields.length;n++)1==this.loadFields[n].isCalcO&&(this.loadFields[n].isCalcO=!1);this.overlay=!1},goCalcO:function(t){this.overlay=!0;var e=this.loadFields[t];e.d=0,e.s=0,e.v=0,e.isCalcO=!e.isCalcO},validate:function(t){var e=t.target,i=e.value;"INPUT"==e.tagName&&(i<=0?e.classList.add("novalid"):e.classList.remove("novalid"))}},created:function(){this.addPlace()}});initForm("callback_form","callback"),initForm("callcouire_form","callcourier"),document.getElementById("isCashPay").onchange=function(t){var e=document.getElementById("cashPaySumm");e.style.display=t.target.checked?"block":"none",e.children[0].focus()};})})(window, document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
